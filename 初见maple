#1.求解线性方程组
A := Matrix([[1, 2], [3, 4]]);
b := Vector([5, 6]);

# 定义变量 x
x := Vector(2);  # 这里定义 x 作为一个两维向量

# 求解线性方程 Ax = b
solution := LinearSolve(A, b);  # 直接使用 LinearSolve 来求解线性方程组

# 输出解
solution;


#2.和时间有关的函数动画
with(plots);
animate(plot, [sin(t*x), x = 0 .. 2*Pi], t = 0 .. 1);

#3.绘制三维函数
with(plots);
plot3d(sin(x*y), x = -Pi .. Pi, y = -Pi .. Pi);

#4.矩阵乘法
M := Matrix([[1, 2], [3, 4]]);
M^2;
M*（使用中文句号）M;

#5.符号计算
# 定义符号变量
x := 'x';
# 符号运算
solve(x^2 - 1 = 0, x);

#6.微积分
limit((1/x), x = 0, right);
diff(sin(x), x);
integrate(1/x, x = 1 .. infinity);

#7.质数
# 获取第 10 个质数
tenth_prime := ithprime(10);  # 这个将返回第 10 个质数

# 输出结果
tenth_prime;

# 检查 10 是否为质数
is_prime := isprime(10);  # 这将返回 false，因为 10 不是质数

# 输出结果
is_prime;


8.分解因式

x := 'x';
factored_poly := factor(x^2 - 5*x + 6);
factored_poly;

ifactor(9)

9.双函数绘制和参数方程绘制
plot([sin(x), cos(x)], x = 0 .. 2*Pi);
plot([sin(x), cos(x), x = 0 .. 2*Pi]);
#都括起来的是参数方程

10.极坐标绘图
with(plots); 
polarplot(sin(5*t), t = 0 .. 20*Pi, thickness = 3, scaling = constrained);

11.循环和条件
for i from 1 to 10 do
   if i mod 2 = 0 then
       print(i, " is even");
   else
       print(i, " is odd");
   end if;
end do;

12.线性规划
restart;
with(plots);
inequal(0 < x + y, x = -3 .. 3, y = -3 .. 3)

13.数据结构
seq(i^2, i = 1 .. 5);
                        1, 4, 9, 16, 25

[seq(i^2, i = 1 .. 5)];
                       [1, 4, 9, 16, 25]

{1, 2, 3, 4, 5};
                        {1, 2, 3, 4, 5}

op([seq(i^2, i = 1 .. 5)]);
                        1, 4, 9, 16, 25

convert({1, 2, 3, 4, 5}, 'list');
                        [1, 2, 3, 4, 5]

convert([1, 2, 3, 4, 5], 'set');
                        {1, 2, 3, 4, 5}


14.空间三维参数方程绘制
spacecurve([t*sin(t), t*cos(t), t], t = 0 .. 6*Pi);

